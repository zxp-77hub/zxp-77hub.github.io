<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>列表方案攻略 on 菜鸟集市</title>
    <link>https://zxp-77hub.github.io/docs/list-guide/</link>
    <description>Recent content in 列表方案攻略 on 菜鸟集市</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 26 Apr 2021 15:38:47 +0800</lastBuildDate><atom:link href="https://zxp-77hub.github.io/docs/list-guide/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://zxp-77hub.github.io/docs/list-guide/%E7%A9%BF%E9%80%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zxp-77hub.github.io/docs/list-guide/%E7%A9%BF%E9%80%8F/</guid>
      <description>穿透 #  我比较喜欢叫它超链接，就是点击列表上的单元格会跳到其他页面的功能。
在这里展示了两种需求：
 会跳到当前单据类型（项目计划）的单据详情页 会跳到其他单据类型（项目）的单据详情页。  代码实现 #    使用rowActionController.makeRowEditAction 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  class BudgetModelList extends QueryListPagePresenter { { protected getListOption(): IListOption { const listOption = super.getListOption(); return merge(listOption, { gridOption: { actionColumnOption: { visibleSize: 3, }, columnResolver: columnDefs =&amp;gt; { this.</description>
    </item>
    
    <item>
      <title>按钮权限</title>
      <link>https://zxp-77hub.github.io/docs/list-guide/%E6%8C%89%E9%92%AE%E6%9D%83%E9%99%90/</link>
      <pubDate>Mon, 26 Apr 2021 15:38:47 +0800</pubDate>
      
      <guid>https://zxp-77hub.github.io/docs/list-guide/%E6%8C%89%E9%92%AE%E6%9D%83%E9%99%90/</guid>
      <description>多列表方案处理了顶部按钮的权限，但是要在列表方案中指定resourceId
public getQueryListOption(): IQueryListSolutionPresenterOptions { return { ...super.getQueryListOption(), resourceId: &amp;#39;xxxxxxxxxxxxxxx&amp;#39;, }; } </description>
    </item>
    
    <item>
      <title>QueryField</title>
      <link>https://zxp-77hub.github.io/docs/list-guide/queryfield/</link>
      <pubDate>Wed, 14 Apr 2021 18:57:28 +0800</pubDate>
      
      <guid>https://zxp-77hub.github.io/docs/list-guide/queryfield/</guid>
      <description>列表数据会查询哪些字段一般是在预置数据里设置的。也可以通过代码控制。
1 2 3 4 5 6 7 8 9 10 11 12 13  export class ProjectConfirmationListListPresenter extends QueryListPagePresenter { getQueryListOption(): IQueryListSolutionPresenterOptions { return { ...super.getQueryListOption(), resourceId: ResourceConstants.Res_ProjectConfirmation, getDynamicQueryFields: () =&amp;gt; { return [&amp;#39;task.project.id&amp;#39;]; }  }; } }   </description>
    </item>
    
    <item>
      <title>行按钮rowAction</title>
      <link>https://zxp-77hub.github.io/docs/list-guide/%E8%A1%8C%E6%8C%89%E9%92%AErowaction/</link>
      <pubDate>Wed, 14 Apr 2021 18:43:40 +0800</pubDate>
      
      <guid>https://zxp-77hub.github.io/docs/list-guide/%E8%A1%8C%E6%8C%89%E9%92%AErowaction/</guid>
      <description>适用于：多列表
效果图： export class BudgetModelList extends QueryListPagePresenter { // 覆盖父类的方法  getRowActions(rowIndex: number, data: any): IGridAction[] { // 获取公共默认的actions  const actions = this.presenter.listSolutionConnector.rowActionController.makeDefaultRowActions( data, ); if (data &amp;amp;&amp;amp; data.id) { // 加新的按钮  actions.push({ icon: ICON_VIEW, title: &amp;#39;预览&amp;#39;, key: &amp;#39;preview&amp;#39;, onClick: (rowIndex, data) =&amp;gt; this.preview(data), }); } // 还可以对actions数组进行过滤  return actions; } } </description>
    </item>
    
    <item>
      <title>选中行</title>
      <link>https://zxp-77hub.github.io/docs/list-guide/%E9%80%89%E4%B8%AD%E8%A1%8C/</link>
      <pubDate>Tue, 13 Apr 2021 21:06:01 +0800</pubDate>
      
      <guid>https://zxp-77hub.github.io/docs/list-guide/%E9%80%89%E4%B8%AD%E8%A1%8C/</guid>
      <description>适用于：多列表方案
this.presenter.listSolutionConnector.selectionItems </description>
    </item>
    
    <item>
      <title>顶部按钮ToolbarAction</title>
      <link>https://zxp-77hub.github.io/docs/list-guide/%E9%A1%B6%E9%83%A8%E6%8C%89%E9%92%AE/</link>
      <pubDate>Tue, 13 Apr 2021 20:55:08 +0800</pubDate>
      
      <guid>https://zxp-77hub.github.io/docs/list-guide/%E9%A1%B6%E9%83%A8%E6%8C%89%E9%92%AE/</guid>
      <description>适用于：多列表方案
效果图： export class ProjectListPagePresenter extends QueryListPagePresenter{ protected commandActionResolver(commandActions: ToolbarAction[]): ToolbarAction[] { // 简单的action  commandActions.unshift({ id: &amp;#39;project-view&amp;#39;, group: ToolbarActionGroup.Group1, action: this.presenter.toolbarConnector.makeCreateButton({ onClick: billTypeId =&amp;gt; { }, }), }); // 复杂的action  commandActions.push(new ProjectMultiCloseAction(this.presenter.listSolutionConnector)) } }  覆盖父类的commandActionResolver方法。向参数commandActions数组中添加ToolbarAction元素即可。 ToolbarAction有两种方式创建。 简单的话，可以用对象字面量创建。 复杂的话，就用一个对象来实现ToolbarAction。参考ProjectMultiCloseAction  </description>
    </item>
    
  </channel>
</rss>
